import { ProblemSeverity, UserContext } from '../../../walk';
export declare type OrderDirection = 'asc' | 'desc';
export declare type OrderOptions = {
    direction: OrderDirection;
    property: string;
};
export declare type AssertToApply = {
    name: string;
    assertId?: string;
    conditions: any;
    message?: string;
    severity?: ProblemSeverity;
    suggest?: string[];
    runsOnKeys: boolean;
    runsOnValues: boolean;
};
export declare function buildVisitorObject(subject: string, context: Record<string, any>[], subjectVisitor: any): Record<string, any>;
export declare function buildSubjectVisitor(properties: string | string[], asserts: AssertToApply[], context?: Record<string, any>[]): (node: any, { report, location, key, type, resolve }: UserContext) => void;
export declare function getIntersectionLength(keys: string[], properties: string[]): number;
export declare function isOrdered(value: any[], options: OrderOptions | OrderDirection): boolean;
