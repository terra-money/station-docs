import { BaseResolver } from '../resolve';
import type { LintRawConfig, Plugin, RawConfig, ResolvedApi, ResolvedLintConfig } from './types';
import { Config } from './config';
export declare function resolveConfig(rawConfig: RawConfig, configPath?: string): Promise<Config>;
export declare function resolvePlugins(plugins: (string | Plugin)[] | null, configPath?: string): Plugin[];
export declare function resolveApis({ rawConfig, configPath, resolver, }: {
    rawConfig: RawConfig;
    configPath?: string;
    resolver?: BaseResolver;
}): Promise<Record<string, ResolvedApi>>;
export declare function resolveLint(lintOpts: {
    lintConfig?: LintRawConfig;
    configPath?: string;
    resolver?: BaseResolver;
}, parentConfigPaths?: string[], extendPaths?: string[]): Promise<ResolvedLintConfig>;
export declare function resolvePreset(presetName: string, plugins: Plugin[]): ResolvedLintConfig;
